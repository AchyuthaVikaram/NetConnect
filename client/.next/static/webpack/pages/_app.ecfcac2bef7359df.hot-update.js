"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/config/redux/action/postAction/index.js":
/*!*****************************************************!*\
  !*** ./src/config/redux/action/postAction/index.js ***!
  \*****************************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPost: function() { return /* binding */ createPost; },\n/* harmony export */   deleteComment: function() { return /* binding */ deleteComment; },\n/* harmony export */   deletePost: function() { return /* binding */ deletePost; },\n/* harmony export */   getAllComments: function() { return /* binding */ getAllComments; },\n/* harmony export */   getAllPosts: function() { return /* binding */ getAllPosts; },\n/* harmony export */   incrementLike: function() { return /* binding */ incrementLike; },\n/* harmony export */   postComment: function() { return /* binding */ postComment; }\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/config */ \"./src/config/index.jsx\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n\nconst getAllPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/getAllPost\", async (_, thunkApi)=>{\n    try {\n        const res = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.get(\"/posts\");\n        return thunkApi.fulfillWithValue(res.data);\n    } catch (err) {\n        return thunkApi.rejectWithValue(err.response.data.message);\n    }\n});\nconst createPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/createpost\", async (data, thunkApi)=>{\n    const { file, body } = data;\n    try {\n        const formData = new FormData();\n        formData.append(\"token\", localStorage.getItem(\"token\"));\n        formData.append(\"body\", body);\n        formData.append(\"media\", file);\n        const response = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.post(\"/post\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/formdata\"\n            },\n            params: {\n                token: localStorage.getItem(\"token\")\n            }\n        });\n        if (response.status == 200) {\n            return thunkApi.fulfillWithValue(\"Post uploaded\");\n        } else {\n            return thunkApi.rejectWithValue(\"post not uploaded\");\n        }\n    } catch (e) {\n        thunkApi.rejectWithValue(e.response.data.message);\n    }\n});\nconst deletePost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/deletepost\", async (body, thunkApi)=>{\n    const { post_id, token } = body;\n    try {\n        const res = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.post(\"/delete_post\", {\n            post_id: post_id,\n            token: token\n        });\n        thunkApi.fulfillWithValue(res.data);\n    } catch (e) {\n        thunkApi.rejectWithValue(e.response.data.message);\n    }\n});\nconst incrementLike = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/incrementlike\", async (post, thunkApi)=>{\n    try {\n        const res = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.post(\"/like\", {\n            postId: post._id\n        }, {\n            params: {\n                token: localStorage.getItem(\"token\")\n            }\n        });\n        return thunkApi.fulfillWithValue(res.data);\n    } catch (e) {\n        return thunkApi.rejectWithValue(e.response.data.message);\n    }\n});\nconst getAllComments = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/getallcomments\", async (postId, thunkApi)=>{\n    try {\n        const res = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.get(\"/get/comments\", {\n            params: {\n                postId\n            }\n        });\n        return thunkApi.fulfillWithValue({\n            comments: res.data || [],\n            postId\n        });\n    } catch (e) {\n        var _e_response_data, _e_response;\n        const errorMessage = ((_e_response = e.response) === null || _e_response === void 0 ? void 0 : (_e_response_data = _e_response.data) === null || _e_response_data === void 0 ? void 0 : _e_response_data.message) || \"Failed to fetch comments\";\n        return thunkApi.rejectWithValue(errorMessage);\n    }\n});\nconst postComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/postcomment\", async (data, thunkApi)=>{\n    try {\n        const res = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.post(\"/comment\", {\n            post_id: data.postId,\n            body: data.comment\n        }, {\n            params: {\n                token: localStorage.getItem(\"token\")\n            }\n        });\n        return thunkApi.fulfillWithValue(res.data);\n    } catch (e) {\n        return thunkApi.rejectWithValue(e.response.data.message);\n    }\n});\nconst deleteComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.createAsyncThunk)(\"post/deletecomment\", async (commentId, thunkApi)=>{\n    try {\n        const res = await _config__WEBPACK_IMPORTED_MODULE_0__.createServer.delete(\"/comment\", {\n            commentId\n        }, {\n            params: {\n                token: localStorage.getItem(\"token\")\n            }\n        });\n        return thunkApi.fulfillWithValue(res.data);\n    } catch (e) {\n        return thunkApi.rejectWithValue(e.response.data.message);\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/config/redux/action/postAction/index.js\n"));

/***/ })

});